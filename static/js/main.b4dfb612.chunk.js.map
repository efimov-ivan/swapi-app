{"version":3,"sources":["redux/rootReducer.js","redux/constants.js","redux/actions.js","redux/saga.js","components/Ships.js","pages/Home.js","components/ShipCard.js","pages/Ship.js","App.js","serviceWorker.js","index.js","space.jpg"],"names":["initialState","error","loading","content","rootReducer","state","action","type","message","fetchShipsReqest","params","fetchShipsSuccess","fetchShips","saga","attributes","call","fetchShipsRequest","put","axios","get","then","response","data","takeLatest","Ships","ships","prev","next","pageHandler","useSpring","from","opacity","marginTop","to","props","set","nextPageHandler","setTimeout","div","style","className","map","ship","key","name","Chip","icon","Icon","label","clickable","color","Fab","disabled","onClick","connect","results","previous","dispatch","useState","searchValue","setSearchValue","useEffect","location","search","split","Grid","container","spacing","item","md","sm","TextField","id","margin","variant","value","onChange","e","target","history","push","onKeyDown","Button","size","CircularProgress","length","url","page","ShipCard","animation","Card","CardMedia","image","CardContent","Typography","gutterBottom","component","model","manufacturer","cost_in_credits","starship_class","passengers","CardActions","match","title","App","Container","maxWidth","path","exact","Home","Ship","Boolean","window","hostname","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b4dfb612.chunk.js","sourcesContent":["import {\n  FETCH_SHIPS_REQUEST,\n  FETCH_SHIPS_SUCCESS,\n  FETCH_SHIPS_ERROR\n} from './constants';\n\nconst initialState = {\n  error: '',\n  loading: true,\n  content: []\n}\n\nfunction rootReducer(state = initialState, action){\n  switch (action.type) {\n    case FETCH_SHIPS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        content: []\n      }\n    case FETCH_SHIPS_SUCCESS:\n      return {\n        ...state,\n        content: action.content,\n        loading: false\n      }\n\n    case FETCH_SHIPS_ERROR:\n        return {\n          ...state,\n          error: action.message,\n          loading: false\n        }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer\n","export const FETCH_SHIPS_REQUEST = 'FETCH_SHIPS_REQUEST'\nexport const FETCH_SHIPS_SUCCESS = 'FETCH_SHIPS_SUCCESS'\nexport const FETCH_SHIPS_ERROR = 'FETCH_SHIPS_ERROR'","import {\n  FETCH_SHIPS_REQUEST,\n  FETCH_SHIPS_SUCCESS,\n  FETCH_SHIPS_ERROR\n} from './constants';\n\nexport const fetchShipsReqest = (params) => ({\n  type: FETCH_SHIPS_REQUEST,\n  params\n})\n\nexport const fetchShipsSuccess = (content) => ({\n  type: FETCH_SHIPS_SUCCESS,\n  content\n})\n\nexport const fetchShipsError = (message) => ({\n  type: FETCH_SHIPS_ERROR,\n  message\n})","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_SHIPS_REQUEST } from \"./constants\";\nimport axios from \"axios\";\nimport { fetchShipsSuccess, fetchShipsError } from \"./actions\";\n\nexport function* fetchShips(attributes) {\n  try {\n    const content = yield call(fetchShipsRequest, attributes.params);\n    yield put(fetchShipsSuccess(content));\n  } catch (e) {\n    yield put(fetchShipsError(e));\n  }\n}\n\nfunction fetchShipsRequest(params) {\n  return axios\n    .get(\"https://swapi.dev/api/starships\", { params })\n    .then((response) => {\n      return response.data;\n    });\n}\n\nexport default function* saga() {\n  yield takeLatest(FETCH_SHIPS_REQUEST, fetchShips);\n}\n","import React, { Fragment } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Link } from \"react-router-dom\";\nimport { Chip, Fab } from \"@material-ui/core\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst Ships = ({ ships, prev, next, pageHandler }) => {\n  const [props, set] = useSpring(() => ({\n    from: { opacity: 0, marginTop: -25 },\n    to: { opacity: 1, marginTop: 0 }\n  }));\n\n  const nextPageHandler = action => {\n    set({ opacity: 0, marginTop: 20 });\n    setTimeout(() => pageHandler(action), 200);\n  };\n\n  return (\n    <animated.div style={props} className=\"ships-list\">\n      {ships.map((ship, key) => (\n        <Fragment key={key}>\n          <Link to={`/ship/${ship.name}`}>\n            <Chip\n              icon={<Icon>flight</Icon>}\n              label={ship.name}\n              clickable\n              color=\"primary\"\n              className=\"chips\"\n            />\n          </Link>\n        </Fragment>\n      ))}\n\n      <div className=\"pagination\">\n        <Fab\n          color=\"primary\"\n          disabled={!prev}\n          onClick={() => {\n            nextPageHandler(prev);\n          }}\n        >\n          <Icon>keyboard_arrow_left</Icon>\n        </Fab>\n        <Fab\n          color=\"primary\"\n          disabled={!next}\n          onClick={() => {\n            nextPageHandler(next);\n          }}\n        >\n          <Icon>keyboard_arrow_right</Icon>\n        </Fab>\n      </div>\n    </animated.div>\n  );\n};\n\nexport default Ships;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchShipsReqest } from \"../redux/actions\";\nimport Ships from \"../components/Ships\";\nimport { Grid, TextField, CircularProgress, Button } from \"@material-ui/core\";\n\nconst Home = props => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const { loading, ships, prev, next } = props;\n\n  const changeHandler = e => {\n    setSearchValue(e.target.value);\n    if (e.target.value === \"\") {\n      props.fetchShipsReqest();\n      if (props.location.search) {\n        props.history.push(\"/\");\n      }\n    }\n  };\n\n  const keyDownHandler = (e) => {\n    if(e.key === 'Enter' && searchValue !== ''){\n      props.fetchShipsReqest({\n        search: searchValue\n      });\n    }\n  };\n\n  const submitHandler = () => {\n    props.fetchShipsReqest({\n      search: searchValue\n    });\n  };\n\n  const pageHandler = url => {\n    const page = url.split(\"=\");\n    props.fetchShipsReqest({\n      page: page[1]\n    });\n  };\n\n  useEffect(() => {\n    if (props.location.search) {\n      let search = props.location.search;\n      search = search.split(\"=\");\n      setSearchValue(search[1]);\n      props.fetchShipsReqest({\n        search: search[1]\n      });\n    } else {\n      props.fetchShipsReqest();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.location.key]);\n\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item md={10} sm={9}>\n          <TextField\n            id=\"filled-search\"\n            label=\"Search field\"\n            type=\"search\"\n            margin=\"normal\"\n            variant=\"filled\"\n            className=\"search-field\"\n            value={searchValue}\n            onChange={changeHandler}\n            onKeyDown={keyDownHandler}\n          />\n        </Grid>\n        <Grid item md={2} sm={3}>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            className=\"search-button\"\n            onClick={submitHandler}\n            disabled={!searchValue}\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n\n      {loading ? (\n        <CircularProgress className=\"loading\"></CircularProgress>\n      ) : ships && ships.length > 0 ? (\n        <Ships\n          ships={ships}\n          prev={prev}\n          next={next}\n          pageHandler={pageHandler}\n        ></Ships>\n      ) : (\n        <div className=\"ships-list\">There is no ships by your criteria.</div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    ships: state.content.results,\n    next: state.content.next,\n    prev: state.content.previous,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchShipsReqest: params => dispatch(fetchShipsReqest(params))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport image from \"../space.jpg\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography\n} from \"@material-ui/core\";\n\nconst ShipCard = ship => {\n  const [animation] = useSpring(() => ({\n    from: { opacity: 0 },\n    to: { opacity: 1 }\n  }));\n\n  return (\n    <animated.div style={animation}>\n      <Card>\n        <CardMedia image={image} className=\"card-media\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {ship.name}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            <b>Model</b> {ship.model} <br />\n            <b>Manufacturer</b> {ship.manufacturer} <br />\n            <b>Cost in credits</b> {ship.cost_in_credits} <br />\n            <b>Starship class</b> {ship.starship_class} <br />\n            <b>Passengers</b> {ship.passengers}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Link to=\"/\">\n            <Button size=\"small\" color=\"primary\" variant=\"contained\">\n              Back\n            </Button>\n          </Link>\n        </CardActions>\n      </Card>\n    </animated.div>\n  );\n};\n\nexport default ShipCard;\n","import React, { useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchShipsReqest } from \"../redux/actions\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport ShipCard from '../components/ShipCard'\n\n\nconst Ship = props => {\n  \n  useEffect(() => {\n    props.fetchShipsReqest({\n      search: props.match.params.title\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [props.location.key]);\n\n  let ship = [];\n  if (props.content.results) {\n    ship = props.content.results[0];\n  }\n  \n  return (\n    <Fragment>\n      {props.loading ? (\n        <CircularProgress className=\"loading\"></CircularProgress>\n      ) : ship ? (\n        <ShipCard ship={ship}></ShipCard>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    content: state.content\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchShipsReqest: params => dispatch(fetchShipsReqest(params))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ship);\n","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from './pages/Home'\nimport Ship from './pages/Ship'\nimport {Container} from '@material-ui/core'\nimport './App.sass'\n\nconst App = () => {\n  return (\n    <Container maxWidth=\"md\" className=\"main-container\">\n      <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/ship/:title\" component={Ship}></Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </Container>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/rootReducer'\nimport saga from './redux/saga'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport createSagaMiddleware from 'redux-saga';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(saga)\n\nconst app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/space.f6acb1cb.jpg\";"],"sourceRoot":""}